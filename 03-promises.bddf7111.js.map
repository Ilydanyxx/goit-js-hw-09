{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKMQ,SAASC,cAAc,QAC/BC,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBASF,IAPA,IAAMC,EAAUL,SAASC,cAAc,uBACjCK,EAAON,SAASC,cAAc,sBAC9BM,EAASP,SAASC,cAAc,wBAChCO,EAAaC,OAAOJ,EAAQK,OAC5BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAC9BG,EAAUL,EACLM,EAAI,EAAGA,GAAKF,EAAaE,IAClCxB,EAAcwB,EAAGD,GAChBE,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE3D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAqCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGvDqB,GAAWF,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  \n}\n\nconst form = document.querySelector(\"form\");\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  \n  const delayed = document.querySelector('input[name=\"delay\"]');\n  const step = document.querySelector('input[name=\"step\"]');\n  const amount = document.querySelector('input[name=\"amount\"]');\n  const delayValue = Number(delayed.value)\n  const stepValue = Number(step.value)\n  const amountValue = Number(amount.value)\n  let current = delayValue;\n  for (let i = 1; i <= amountValue; i++) {\n  createPromise(i, current)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n    current += stepValue;\n}\n\n})\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delayed","step","amount","delayValue","Number","value","stepValue","amountValue","current","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.bddf7111.js.map"}