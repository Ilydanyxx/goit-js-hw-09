{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC9B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKAQ,SAASC,cAAc,QAC/BC,iBAAiB,UAAWC,IAC/BA,EAAEC,iBAEF,MAAMC,EAAUL,SAASC,cAAc,uBACjCK,EAAON,SAASC,cAAc,sBAC9BM,EAASP,SAASC,cAAc,wBAChCO,EAAaC,OAAOJ,EAAQK,OAC5BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAClC,IAAIG,EAAUL,EACd,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAaE,IAClCxB,EAAcwB,EAAGD,GAChBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,MAAU,IAE7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAeC,MAAU,IAGzDqB,GAAWF,C","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n   return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  \n}\n\nconst form = document.querySelector(\"form\");\nform.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  \n  const delayed = document.querySelector('input[name=\"delay\"]');\n  const step = document.querySelector('input[name=\"step\"]');\n  const amount = document.querySelector('input[name=\"amount\"]');\n  const delayValue = Number(delayed.value)\n  const stepValue = Number(step.value)\n  const amountValue = Number(amount.value)\n  let current = delayValue;\n  for (let i = 1; i <= amountValue; i++) {\n  createPromise(i, current)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n    current += stepValue;\n}\n\n})\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delayed","step","amount","delayValue","Number","value","stepValue","amountValue","current","i","then","console","log","catch"],"version":3,"file":"03-promises.ac65e4f2.js.map"}